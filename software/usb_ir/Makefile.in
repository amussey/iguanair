include Make.settings

LIBDIR=@libdir@
BINDIR=@bindir@



CFLAGS += -I. -fvisibility=hidden -DIGUANAIR_EXPORTS
CFLAGS += -Wl,-rpath,$(LIBDIR)/iguanaIR

ifdef DARWIN
  LINKARGS   = -Wl,-dylib_current_version,1.0.0,-dylib_compatibility_version,1.0.0 -install_name $(DESTDIR)/$(LIBDIR)/$(LIBNAME)
  EXPORTARGS =
else
  LINKARGS   = -Wl,-soname=$(LIBNAME),--version-script=$(srcdir)/ig.ver
  EXPORTARGS = -Wl,-export-dynamic
endif

.PHONY: all drivers
all: igclient igdaemon drivers
igclient igdaemon: $(LIBNAME)

$(LIBNAME): iguanaIR.o support.o dataPackets.o compat-unix.o pipes.o
	$(CC) $(SHAREARG) $(LINKARGS) $(LDFLAGS) $^ -o $@

drivers:
	$(MAKE) -C $(srcdir)/drivers prefix=$(prefix)

igdaemon: daemon.o \
	  server.o client-interface.o device-interface.o driver.o \
          list.o protocol-versions.o pipes.o dataPackets.o compat-unix.o \
          support.c $(OSSUPPORT)
	$(CC) $(EXPORTARGS) $(CPPFLAGS) $(CFLAGS) -DSUPPORT_EXPORTS \
              $(LDFLAGS) $^ -lpopt -lpthread -ldl $(LIBNAME) -o $@

igclient: client.o list.o support.o compat-unix.o
	$(CC) $(LDFLAGS) $^ -lpopt $(LIBNAME) -o $@

%.o: %.c Makefile iguanaIR.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(PICFLAG) $< -o $@

driver.o: driver.c Makefile iguanaIR.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) -Wno-strict-aliasing $< -o $@

# need a special dependency for config.h
compat-unix.o: compat-unix.c config.h

# NOTE: I would rather use PYTHON_VERSION, but it doesn't work
ifneq (@PYTHON_CPPFLAGS@,)
all: _iguanaIR.$(SHAREEXT)
install: install-python install-reflasher
.PHONY: install-python
install-python:
	install -d $(DESTDIR)@PYTHON_SITE_PKG@
	install _iguanaIR.$(SHAREEXT) $(DESTDIR)@PYTHON_SITE_PKG@/_iguanaIR.$(SHAREEXT)
	install iguanaIR.py $(DESTDIR)@PYTHON_SITE_PKG@/iguanaIR.py

.PHONY: install-reflasher
install-reflasher:
	$(MAKE) -C $(srcdir)/reflasher prefix=$(prefix) LIBDIR=$(LIBDIR) BINDIR=$(BINDIR) install

uninstall: uninstall-python uninstall-reflasher
.PHONY: uninstall-python
uninstall-python:
	rm -f $(DESTDIR)@PYTHON_SITE_PKG@/_iguanaIR.$(SHAREEXT)
	rm -f $(DESTDIR)@PYTHON_SITE_PKG@/iguanaIR.py

.PHONY: uninstall-reflasher
uninstall-reflasher:
	$(MAKE) -C $(srcdir)/reflasher prefix=$(prefix) LIBDIR=$(LIBDIR) BINDIR=$(BINDIR) uninstall

iguanaIR_wrap.c iguanaIR.py: iguanaIR.i iguanaIR.h Makefile
	swig $(CPPFLAGS) @PYTHON_CPPFLAGS@ -python -I$(srcdir) $(<F)

iguanaIR_wrap.o: iguanaIR_wrap.c Makefile
#	$(CC) -c $(CPPFLAGS) @PYTHON_CPPFLAGS@ $(CFLAGS) -Wno-strict-aliasing -Wno-unused -Wno-implicit-function-declaration -Wno-long-long $< -o $@	
	$(CC) -c $(CPPFLAGS) @PYTHON_CPPFLAGS@ $(CFLAGS) $(PICFLAG) -I$(srcdir) -Wno-missing-field-initializers -Wno-unused -Wno-long-long -Wno-strict-aliasing $< -o $@

_iguanaIR.$(SHAREEXT): iguanaIR_wrap.o
	$(CC) $(LDFLAGS) @PYTHON_LDFLAGS@ $(SHAREARG) $^ $(LIBNAME) -o $@
endif

# change ownership unless we're building an rpm
ifneq ($(INSTALLPACKAGE),TRUE)
  SETOWNER=--owner iguanair --group iguanair
install: adduser
.PHONY: adduser
adduser:
	/usr/sbin/useradd -u 213 -c "Iguanaworks IR Daemon" -d / -s /sbin/nologin iguanair 2>/dev/null || true

uninstall: deluser
.PHONY: deluser
deluser:
	/usr/sbin/userdel iguanair || true
else
  SETOWNER=
endif

# install a non-versioned symlink
ifneq ($(LIBNAME),libiguanaIR.$(SHAREEXT))
install: install-symlink
.PHONY: install-symlink
install-symlink:
	install -d $(DESTDIR)/$(LIBDIR)
	rm -f $(DESTDIR)/$(LIBDIR)/libiguanaIR.$(SHAREEXT)
	ln -s $(LIBNAME) $(DESTDIR)/$(LIBDIR)/libiguanaIR.$(SHAREEXT)
endif

.PHONY: install
install: all
	install -d $(DESTDIR)/$(BINDIR)
	install igclient $(DESTDIR)/$(BINDIR)/igclient
	install igdaemon $(DESTDIR)/$(BINDIR)/igdaemon
	install -d $(DESTDIR)/$(LIBDIR)/iguanaIR
	install $(LIBNAME) $(DESTDIR)/$(LIBDIR)/$(LIBNAME)
	#install drivers/libusbpre1.$(SHAREEXT) $(DESTDIR)/$(LIBDIR)/iguanaIR/libusbpre1.$(SHAREEXT)
	#install drivers/libusb.$(SHAREEXT) $(DESTDIR)/$(LIBDIR)/iguanaIR/libusb.$(SHAREEXT)
	install drivers/*.$(SHAREEXT) $(DESTDIR)/$(LIBDIR)/iguanaIR/
	install -d $(DESTDIR)$(prefix)/include
	install $(srcdir)/iguanaIR.h $(DESTDIR)$(prefix)/include/iguanaIR.h
ifdef DARWIN
	install -D --mode 644 osx/com.iguana.igdaemon.plist \
                              /Library/LaunchDaemons/com.iguana.igdaemon.plist
	launchctl load -w /Library/LaunchDaemons/com.iguana.igdaemon.plist
else
	install -D $(srcdir)/iguanaIR.init $(DESTDIR)/etc/init.d/iguanaIR
	install -D --mode 644 $(srcdir)/iguanaIR.options $(DESTDIR)/etc/default/iguanaIR
	install -D --mode 644 $(srcdir)/udev/iguanaIR.rules \
	                      $(DESTDIR)/lib/udev/rules.d/80-iguanaIR.rules
	install --mode 755 $(SETOWNER) -d $(DESTDIR)/lib/udev/devices/iguanaIR
	install --mode 755 $(SETOWNER) -d $(DESTDIR)/var/run/iguanaIR
endif

.PHONY: uninstall
uninstall:
ifdef DARWIN
	launchctl unload -w /Library/LaunchDaemons/com.iguana.igdaemon.plist || true
	rm -f /Library/LaunchDaemons/com.iguana.igdaemon.plist
else
	/etc/init.d/iguanaIR stop || true
	rm -f $(DESTDIR)/etc/init.d/iguanaIR
	rm -f $(DESTDIR)/etc/default/iguanaIR
	rm -f $(DESTDIR)/etc/udev/rules.d/iguanaIR.rules
	rmdir $(DESTDIR)/lib/udev/devices/iguanaIR 2>/dev/null || true
	rmdir $(DESTDIR)/var/run/iguanaIR 2>/dev/null || true
endif
	rm -f $(DESTDIR)$(BINDIR)/igclient
	rm -f $(DESTDIR)$(BINDIR)/igdaemon
	rm -f $(DESTDIR)$(LIBDIR)/$(LIBNAME)
	rm -f $(DESTDIR)$(LIBDIR)/libiguanaIR.$(SHAREEXT)
	rm -f $(DESTDIR)$(prefix)/include/iguanaIR.h
	rm -fr $(DESTDIR)$(LIBDIR)/iguanaIR
	rm -fr $(DESTDIR)$(LIBDIR)/iguanaIR-reflasher

.PHONY: clean drivers-clean
clean: drivers-clean
	rm -f *~ *.o *iguanaIR.$(SHAREEXT)* *libiguanaIR.* iguanaIR.py* iguanaIR_wrap.c igdaemon igclient config.log

drivers-clean:
	$(MAKE) -C $(srcdir)/drivers prefix=$(prefix) clean

.PHONY: distclean drivers-distclean
distclean: clean drivers-distclean
	rm -f Makefile config.h config.status
	$(MAKE) -C $(srcdir)/packaging prefix=$(prefix) builddir="$(builddir)" clean

drivers-distclean:
	$(MAKE) -C $(srcdir)/drivers prefix=$(prefix) distclean

.PHONY: cleanest
cleanest: distclean
	rm -rf configure autom4te.cache

.PHONY: package
package: distclean
	$(MAKE) -C $(srcdir)/packaging prefix=$(prefix) builddir="$(builddir)"





AUTOCONF=autoconf
ACLOCAL=aclocal
ifeq ($(SYSTEM),freebsd)
    AUTOCONF=autoconf259
    ACLOCAL=aclocal19
endif

.PHONY: dist devel-cleaner
dist: configure
devel-clean: distclean
	rm -rf autoconf/autom4te.cache autoconf/aclocal.m4 

# rules to rebuild the configure script
M4S=$(filter-out $(srcdir)/autoconf/aclocal.m4, $(wildcard $(srcdir)/autoconf/*.m4))
autoconf/aclocal.m4: $(M4S)
	cd $(srcdir)/autoconf; $(ACLOCAL)

configure: autoconf/configure.ac autoconf/aclocal.m4
	cd $(srcdir)/autoconf; $(AUTOCONF) -o ../configure configure.ac

config.h.in: autoconf/configure.ac
	cd $(srcdir)/autoconf; autoheader configure.ac; mv config.h.in ..

config.status: configure
	$(SHELL) ./config.status --recheck

Makefile: ./config.status Makefile.in ./Make.settings.in
	$(SHELL) $<

config.h: autoconf/stamp-h
autoconf/stamp-h: ./config.status config.h.in
	$(SHELL) $<
