include Make.settings

CFLAGS += -I. -fvisibility=hidden -DIGUANAIR_EXPORTS

ifdef DARWIN
  LINKARGS   = -Wl,-dylib_current_version,1.0.0,-dylib_compatibility_version,1.0.0 -install_name $(DESTDIR)/$(libdir)/$(LIBNAME)
  EXPORTARGS =
else
  LINKARGS   = -Wl,-soname=$(LIBNAME),--version-script=$(srcdir)/ig.ver
  EXPORTARGS = -Wl,-export-dynamic
endif

.PHONY: all
all: igclient igdaemon drivers utils
igclient igdaemon: $(LIBNAME)

COMMON = support.o compat-unix.o
COMMON_COM = dataPackets.o pipes.o

$(LIBNAME): iguanaIR.o $(COMMON) $(COMMON_COM)
	$(CC) $(LINKARGS) $(LDFLAGS) $(DYNLIB_FLAGS) $^ -o $@

.PHONY: drivers utils
drivers utils:
	$(MAKE) -C $(srcdir)/$@ prefix=$(prefix)

igdaemon: daemon.o \
	  server.o client-interface.o device-interface.o driver.o \
          list.o protocol-versions.o $(OSSUPPORT) $(COMMON) $(COMMON_COM)
	$(CC) $(EXPORTARGS) $(CPPFLAGS) $(CFLAGS) -DSUPPORT_EXPORTS \
              $(LDFLAGS) $(DAEMON_LDFLAGS) $^ -lpopt -lpthread -ldl $(LIBNAME) -o $@

server.o: CPPFLAGS += \
	-DDRIVERSDIR='"$(subst ",\",$(subst ','\'',$(subst \,\\,$(libdir))))/$(IGUANAIR)"'

igclient: client.o list.o $(COMMON)
	$(CC) $(LDFLAGS) $^ -lpopt $(LIBNAME) -o $@

%.o: %.c Makefile iguanaIR.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $< -o $@

driver.o: driver.c Makefile iguanaIR.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) -Wno-strict-aliasing $< -o $@

# need a special dependency for config.h
compat-unix.o: compat-unix.c config.h

# NOTE: I would rather use PYTHON_VERSION, but it doesn't work
ifneq (@PYTHON_CPPFLAGS@,)
all: _iguanaIR.$(PYTHON_DYNMOD_EXT)
install: drivers-install install-python install-utils install-reflasher
.PHONY: install-python
install-python:
	$(INSTALL) -d $(DESTDIR)@PYTHON_SITE_PKG@
	$(INSTALL_PROGRAM) _iguanaIR.$(PYTHON_DYNMOD_EXT) $(DESTDIR)@PYTHON_SITE_PKG@/_iguanaIR.$(PYTHON_DYNMOD_EXT)
	$(INSTALL_DATA) iguanaIR.py $(DESTDIR)@PYTHON_SITE_PKG@/iguanaIR.py

.PHONY: install-utils install-reflasher
install-utils install-reflasher:
	$(MAKE) -C $(srcdir)/$(patsubst install-%,%,$@) prefix=$(prefix) bindir=$(bindir) libdir=$(libdir) install

uninstall: drivers-uninstall uninstall-python uninstall-utils uninstall-reflasher
.PHONY: uninstall-python
uninstall-python:
	$(RM) $(DESTDIR)@PYTHON_SITE_PKG@/_iguanaIR.$(PYTHON_DYNMOD_EXT)
	$(RM) $(DESTDIR)@PYTHON_SITE_PKG@/iguanaIR.py

.PHONY: uninstall-utils uninstall-reflasher
uninstall-utils uninstall-reflasher:
	$(MAKE) -C $(srcdir)/$(patsubst uninstall-%,%,$@) DESTDIR=$(DESTDIR) prefix=$(prefix) uninstall

iguanaIR_wrap.c iguanaIR.py: iguanaIR.i iguanaIR.h Makefile
	swig $(CPPFLAGS) @PYTHON_CPPFLAGS@ -python -I$(srcdir) $(<F)

iguanaIR_wrap.o: iguanaIR_wrap.c Makefile
#	$(CC) -c $(CPPFLAGS) @PYTHON_CPPFLAGS@ $(CFLAGS) -Wno-strict-aliasing -Wno-unused -Wno-implicit-function-declaration -Wno-long-long $< -o $@
	$(CC) -c $(CPPFLAGS) @PYTHON_CPPFLAGS@ $(CFLAGS) -Wno-missing-field-initializers -Wno-unused -Wno-long-long -Wno-strict-aliasing $< -o $@

_iguanaIR.$(PYTHON_DYNMOD_EXT): iguanaIR_wrap.o
	$(CC) $(LDFLAGS) @PYTHON_LDFLAGS@ $(DYNLIB_FLAGS) $^ $(LIBNAME) -o $@
endif

# change ownership unless we're building an rpm
ifeq ($(RPM_OS)$(DARWIN),)
  SETOWNER=--o iguanair --g iguanair
install: adduser
.PHONY: adduser
adduser:
	/usr/sbin/useradd -u 213 -c "Iguanaworks IR Daemon" -d / -s /sbin/nologin iguanair 2>/dev/null || true

uninstall: deluser
.PHONY: deluser
deluser:
	/usr/sbin/userdel iguanair || true
else
  SETOWNER=
endif

# install a non-versioned symlink
ifneq ($(LIBNAME),libiguanaIR.$(DYNLIB_EXT))
install: install-symlink
.PHONY: install-symlink
install-symlink:
	install -d $(DESTDIR)/$(libdir)
	$(RM) $(DESTDIR)/$(libdir)/libiguanaIR.$(DYNLIB_EXT)
	ln -s $(LIBNAME) $(DESTDIR)/$(libdir)/libiguanaIR.$(DYNLIB_EXT)
endif

.PHONY: install
install: all
	install -d $(DESTDIR)/$(bindir)
	install igclient $(DESTDIR)/$(bindir)/igclient
	install igdaemon $(DESTDIR)/$(bindir)/igdaemon
	install -d $(DESTDIR)/$(libdir)/iguanaIR
	install $(LIBNAME) $(DESTDIR)/$(libdir)/$(LIBNAME)
	install -d $(DESTDIR)$(prefix)/include
	install $(srcdir)/iguanaIR.h $(DESTDIR)$(prefix)/include/iguanaIR.h
ifdef DARWIN
	install -m 644 osx/net.iguanaworks.igdaemon.plist \
                              $(DESTDIR)/Library/LaunchDaemons/net.iguanaworks.igdaemon.plist
else
	$(INSTALL) -d $(DESTDIR)/etc/init.d/iguanaIR
	$(INSTALL_DATA) $(srcdir)/iguanaIR.init $(DESTDIR)/etc/init.d/iguanaIR
	$(INSTALL) -d $(DESTDIR)/etc/default/iguanaIR
	$(INSTALL_DATA) $(srcdir)/iguanaIR.options $(DESTDIR)/etc/default/iguanaIR
	$(INSTALL_DATA) $(srcdir)/udev/iguanaIR.rules \
	                      $(DESTDIR)/lib/udev/rules.d/80-iguanaIR.rules
	$(INSTALL) -d -m 755 $(SETOWNER) -d $(DESTDIR)/lib/udev/devices/iguanaIR
	$(INSTALL) -d -m 755 $(SETOWNER) -d $(DESTDIR)/dev/iguanaIR
endif
.PHONY: drivers-install
drivers-install:
	$(MAKE) -C $(srcdir)/drivers DESTDIR=$(DESTDIR) prefix=$(prefix) install

.PHONY: uninstall
uninstall:
	$(RM) $(DESTDIR)/Library/LaunchDaemons/net.iguanaworks.igdaemon.plist
	/etc/init.d/iguanaIR stop || true
	$(RM) $(DESTDIR)/etc/init.d/iguanaIR
	$(RM) $(DESTDIR)/etc/default/iguanaIR
	$(RM) $(DESTDIR)/etc/udev/rules.d/iguanaIR.rules
	rmdir $(DESTDIR)/lib/udev/devices/iguanaIR 2>/dev/null || true
	rmdir $(DESTDIR)/dev/iguanaIR 2>/dev/null || true
	$(RM) $(DESTDIR)$(bindir)/igclient
	$(RM) $(DESTDIR)$(bindir)/igdaemon
	$(RM) $(DESTDIR)$(libdir)/$(LIBNAME)
	$(RM) $(DESTDIR)$(libdir)/libiguanaIR.$(DYNLIB_EXT)
	$(RM) $(DESTDIR)$(prefix)/include/iguanaIR.h
	$(RM)r $(DESTDIR)$(libdir)/iguanaIR
	$(RM)r $(DESTDIR)$(libdir)/iguanaIR-reflasher

.PHONY: drivers-uninstall
drivers-uninstall:
	$(MAKE) -C $(srcdir)/drivers DESTDIR=$(DESTDIR) prefix=$(prefix) uninstall

.PHONY: clean clean-drivers clean-reflasher clean-utils
clean: clean-drivers clean-reflasher clean-utils
	$(RM) *~ *.o *iguanaIR.$(DYNLIB_EXT) *iguanaIR.$(DYNLIB_EXT).* *iguanaIR.$(PYTHON_DYNMOD_EXT) *libiguanaIR.* iguanaIR.py* iguanaIR_wrap.c igdaemon igclient config.log

clean-drivers clean-reflasher clean-utils:
	$(MAKE) -C $(srcdir)/$(patsubst clean-%,%, $@) prefix=$(prefix) clean

.PHONY: distclean distclean-drivers distclean-reflasher distclean-utils
distclean: clean distclean-drivers distclean-reflasher distclean-utils
	$(RM) Makefile config.h config.status
	$(MAKE) -C $(srcdir)/packaging prefix=$(prefix) builddir="$(builddir)" clean

drivers-distclean reflasher-distclean:
	$(MAKE) -C $(srcdir)/$(patsubst distclean-%,%,$@) prefix=$(prefix) distclean

.PHONY: cleanest
cleanest: distclean
	$(RM) -r configure autom4te.cache

.PHONY: package
package: distclean
	$(MAKE) -C $(srcdir)/packaging prefix=$(prefix) builddir="$(builddir)"





AUTOCONF=autoconf
ACLOCAL=aclocal
ifeq ($(SYSTEM),freebsd)
    AUTOCONF=autoconf259
    ACLOCAL=aclocal19
endif

.PHONY: dist devel-cleaner
dist: configure
devel-clean: distclean
	$(RM) -r autoconf/autom4te.cache autoconf/aclocal.m4 

# rules to rebuild the configure script
M4S=$(filter-out $(srcdir)/autoconf/aclocal.m4, $(wildcard $(srcdir)/autoconf/*.m4))
autoconf/aclocal.m4: $(M4S)
	cd $(srcdir)/autoconf; $(ACLOCAL)

configure: autoconf/configure.ac autoconf/aclocal.m4
	cd $(srcdir)/autoconf; $(AUTOCONF) -o ../configure configure.ac

config.h.in: autoconf/configure.ac
	cd $(srcdir)/autoconf; autoheader configure.ac; mv config.h.in ..

config.status: configure
	$(SHELL) ./config.status --recheck

Makefile: ./config.status Makefile.in ./Make.settings.in
	$(SHELL) $<

config.h: autoconf/stamp-h
autoconf/stamp-h: ./config.status config.h.in
	$(SHELL) $<
